server.port=9000
spring.session.store-type=none
#security
security.basic.enabled=false

#jpa configuration

# sql server - doesn't work
#spring.datasource.url=jdbc:sqlserver://localhost;databaseName=springbootdb
#spring.datasource.username=smarthome
#spring.datasource.password=smarthome
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.show-sql=true
#spring.jpa.hibernate.dll-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect

#spring.profiles.active=production
# oracle - works
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=smarthome
#spring.datasource.password=smarthome
#spring.datasource.validationQuery = SELECT 1
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.dbcp2.test-on-create=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

#spring.profiles.active=production
# mysql - ?
spring.datasource.url=jdbc:mysql://localhost:3306/smarthome?useSSL=false
spring.datasource.username=smarthome
spring.datasource.password=smarthome
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#spring-security
spring.queries.users-query=select username, password, active from user where username=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?
